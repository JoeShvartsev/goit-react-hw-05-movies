{"version":3,"file":"static/js/861.b53b46fe.chunk.js","mappings":"kPAEMA,EAAU,mCACVC,EAAW,sCAEV,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAuBC,GAAvB,gGAEoBC,EAAAA,EAAAA,IAAA,UAAaH,GAAb,OAAwBE,EAAxB,YAAsC,CAC3DE,QAAS,CACPC,cACE,6NACFC,OAAQ,oBAEVC,OAAQ,CACNC,QAAST,EACTU,SAAU,WAVX,cAEGC,EAFH,OAcHC,QAAQC,IAAIF,EAASG,MAdlB,kBAeIH,EAASG,MAfb,gCAiBHF,QAAQG,MAAR,MAjBG,gF,aCAMC,EAAO,WAClB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAGFE,GAAWC,EAAAA,EAAAA,cAAW,iBAAE,oGACTrB,EAAQkB,GADC,OACtBN,EADsB,OAE5BK,EAAUL,EAAKU,MAFa,2CAG5B,CAACJ,IASH,OAPAK,EAAAA,EAAAA,YAAU,WACRH,GAED,GAAE,CAACF,EAASE,KAKX,8BACGJ,EAAOQ,KAAI,SAAAC,GAAK,OACf,4BACE,gBACEC,IACED,EAAME,aAAN,yCACsCF,EAAME,cApBxD,6EAuBUC,IAAKH,EAAMI,QAEb,wBAAKJ,EAAMI,QACX,uCAAeJ,EAAMK,eAVbL,EAAMxB,GADD,KAgBtB,C","sources":["Api/fetchByCastDetails.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = \"63a74474f933eda5b8cc066d3494dc04\";\nconst BASE_URL = \"https://api.themoviedb.org/3/movie/\";\n\nexport async function getCast(id) {\n  try {\n    const response = await axios.get(`${BASE_URL}${id}/credits`, {\n      headers: {\n        Authorization:\n          \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2M2E3NDQ3NGY5MzNlZGE1YjhjYzA2NmQzNDk0ZGMwNCIsInN1YiI6IjY0ODZiMGMzYzAzNDhiMDExZmJkYzFlMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.BkRWT5yob_WZgHbbPPNq-qgAcjbVt-Or65dfa93IL8Y\",\n        accept: \"application/json\",\n      },\n      params: {\n        api_key: API_KEY,\n        language: \"en-US\",\n      },\n    });\n\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'Api/fetchByCastDetails';\nimport { useCallback } from 'react';\n\nexport const Cast = () => {\n  const [actors, setActors] = useState([]);\n  const { movieId } = useParams();\n  const defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=500x600';\n  const fetchData =useCallback( async () => {\n    const data = await getCast(movieId);\n    setActors(data.cast);\n  },[movieId]);\n\n  useEffect(() => {\n    fetchData();\n    \n  }, [movieId, fetchData]);\n\n  \n\n  return (\n    <>\n      {actors.map(actor => (\n        <div key={actor.id}>\n          <img\n            src={\n              actor.profile_path\n                ? `https://image.tmdb.org/t/p/w500${actor.profile_path}`\n                : defaultImg\n            }\n            alt={actor.name}\n          />\n          <h3>{actor.name}</h3>\n          <p>Character: {actor.character}</p>\n        </div>\n      ))}\n    </>\n  );\n};\n\n\n"],"names":["API_KEY","BASE_URL","getCast","id","axios","headers","Authorization","accept","params","api_key","language","response","console","log","data","error","Cast","useState","actors","setActors","movieId","useParams","fetchData","useCallback","cast","useEffect","map","actor","src","profile_path","alt","name","character"],"sourceRoot":""}