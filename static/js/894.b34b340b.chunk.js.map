{"version":3,"file":"static/js/894.b34b340b.chunk.js","mappings":"oOACA,EAA4B,6BAA5B,EAAsE,8BAAtE,EAAwH,qCAAxH,EAAuL,2CAAvL,EAAqP,oC,SCkCrP,EA/BkB,SAAC,GAAgD,IAA9CA,EAA6C,EAA7CA,SAAUC,EAAmC,EAAnCA,gBAAiBC,EAAkB,EAAlBA,YAK9C,OACE,gBAAKC,UAAWC,EAAhB,UACE,kBAAMD,UAAWC,EAAgBJ,SAAUA,EAA3C,WACE,mBAAQK,KAAK,SAASF,UAAWC,EAAjC,UACE,iBAAMD,UAAWC,EAAjB,uBAGF,kBACED,UAAWC,EACXC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,eACZC,SAjBa,SAAC,GAA2B,IAAfC,EAAc,EAAxBC,OAAUD,MAChCT,EAAgB,CAAEW,OAAQF,GAC3B,EAgBOA,MAAOR,GAAe,SAK/B,E,iBCGD,EA3BoB,SAAC,GAAgB,IAAdW,EAAa,EAAbA,OACfC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,0BACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAASC,MAAOJ,EAAUK,GAAE,kBAAaF,EAAMG,IAA/C,SACGH,EAAMI,SAFFJ,EAAMG,GADA,OAUxB,E,SClBKE,EAAU,mCACVC,EAAW,4CAEV,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,gGAEoBC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BE,GAAU,CAC9DE,QAAS,CACPC,cACE,6NACFC,OAAQ,oBAEVC,OAAQ,CACNC,QAAST,EACTU,SAAU,WAVX,cAEGC,EAFH,yBAcIA,EAASC,KAAKC,SAdlB,gCAgBHC,QAAQC,MAAR,MAhBG,gFCGP,IA2CA,EA3CmB,WACjB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOzB,EAAP,KAAe0B,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBxC,EAArB,KACIC,EAAcuC,EAAaC,IAAI,UAE7BC,GAAcC,EAAAA,EAAAA,SAAO,GACrBC,GAAYC,EAAAA,EAAAA,cAAW,iBAAE,wFACzB5C,EADyB,0CAGNsB,EAAYtB,GAHN,OAGnBgC,EAHmB,OAIzBK,EAAUL,GACVO,EAAaM,IAAI,SAAU,IALF,gDAOzBX,QAAQC,MAAM,uBAAd,MAPyB,yDAU7B,CAACI,EAAavC,KAEhB8C,EAAAA,EAAAA,YAAU,WACJL,EAAYM,SAAW/C,GACzB2C,EAAU3C,GAEZyC,EAAYM,SAAU,CAEvB,GAAE,CAACJ,EAAW3C,IAQf,OACE,4BACE,SAAC,EAAD,CACEF,SARiB,SAAAkD,GACrBA,EAAEC,iBACFN,GACD,EAMK5C,gBAAiBA,EACjBC,YAAaA,KAEf,SAAC,EAAD,CAAYW,OAAQA,MAGzB,C","sources":["webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","components/MoviesList/MoviesList.jsx","Api/fetchByQuerry.js","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"SearchBar_searchbar__xBucJ\",\"searchform\":\"SearchBar_searchform__c8HbR\",\"searchform-button\":\"SearchBar_searchform-button__CSkGr\",\"searchform-button-label\":\"SearchBar_searchform-button-label__Vhlb8\",\"searchform-input\":\"SearchBar_searchform-input__nj5Fi\"};","import React from 'react';\nimport PropTypes from 'prop-types'; \nimport css from './SearchBar.module.css';\n\nconst SearchBar = ({ onSubmit, setSearchParams, searchValue }) => {\n  const handleChange = ({ target: { value } }) => {\n    setSearchParams({ search: value });\n  };\n  \n  return (\n    <div className={css.searchbar}>\n      <form className={css.searchform} onSubmit={onSubmit}>\n        <button type=\"submit\" className={css['searchform-button']}>\n          <span className={css['searchform-button-label']}>Search</span>\n        </button>\n\n        <input\n          className={css['searchform-input']}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n          onChange={handleChange}\n          value={searchValue || ''}\n        />\n      </form>\n    </div>\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  setSearchParams: PropTypes.func.isRequired,\n  searchValue: PropTypes.string \n};\nexport default SearchBar\n\n","import React from 'react';\nimport PropTypes from 'prop-types'; \nimport { NavLink, useLocation } from 'react-router-dom';\n\n const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <NavLink state={location} to={`/movies/${movie.id}`}>\n              {movie.title}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\nexport default MoviesList\n\n","import axios from \"axios\";\n\nconst API_KEY = \"63a74474f933eda5b8cc066d3494dc04\";\nconst BASE_URL = \"https://api.themoviedb.org/3/search/movie\";\n\nexport async function getByQuerry(querry) {\n  try {\n    const response = await axios.get(`${BASE_URL}?query=${querry}`, {\n      headers: {\n        Authorization:\n          \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2M2E3NDQ3NGY5MzNlZGE1YjhjYzA2NmQzNDk0ZGMwNCIsInN1YiI6IjY0ODZiMGMzYzAzNDhiMDExZmJkYzFlMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.BkRWT5yob_WZgHbbPPNq-qgAcjbVt-Or65dfa93IL8Y\",\n        accept: \"application/json\",\n      },\n      params: {\n        api_key: API_KEY,\n        language: \"en-US\",\n      },\n    });\n    \n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}","import React, { useState, useEffect, useCallback} from 'react';\nimport  SearchBar  from 'components/SearchBar/SearchBar';\nimport  MoviesList  from 'components/MoviesList/MoviesList';\nimport { getByQuerry } from 'Api/fetchByQuerry';\nimport {  useSearchParams } from 'react-router-dom';\nimport { useRef } from 'react';\n\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  let searchValue = searchParams.get('search');\n  \n  const firstRender = useRef(true)\n  const fetchData = useCallback( async () => {\n    if (searchValue) {\n      try {\n        const data = await getByQuerry(searchValue);\n        setMovies(data);\n        searchParams.set('search', '');\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    }\n  },[searchParams,searchValue]);\n  \n  useEffect(() => {\n    if (firstRender.current && searchValue) {\n      fetchData(searchValue);\n    }\n    firstRender.current = false; \n  \n  }, [fetchData, searchValue]);\n  \n  \n  const onHandleSubmit = e => {\n    e.preventDefault();\n    fetchData();\n  };\n\n  return (\n    <div>\n      <SearchBar\n        onSubmit={onHandleSubmit}\n        setSearchParams={setSearchParams}\n        searchValue={searchValue}\n      />\n      <MoviesList movies={movies} />\n    </div>\n  );\n};\nexport default MoviesPage\n"],"names":["onSubmit","setSearchParams","searchValue","className","css","type","autoComplete","autoFocus","placeholder","onChange","value","target","search","movies","location","useLocation","map","movie","state","to","id","title","API_KEY","BASE_URL","getByQuerry","querry","axios","headers","Authorization","accept","params","api_key","language","response","data","results","console","error","useState","setMovies","useSearchParams","searchParams","get","firstRender","useRef","fetchData","useCallback","set","useEffect","current","e","preventDefault"],"sourceRoot":""}